파싱, 시뮬레이션, 브루트 포스, bfs, 다이나믹 프로그래밍이 주로 나옴

파싱, 시뮬레이션 > 브루트 포스 > bfs > 다이나믹 프로그래밍

입력의 크기 N제한을 가장 먼저 읽으면 좋다.
입력의 크기로 시간 제한을 예상할 수 있기 때문에
시간 제한은 약 1억으로 제한을 하는 것이 좋다(1억이면 약 1초)

힌트의 풀이 방법은 풀이 방법이 아님!!

부루트 포스 문제는 제귀함수 사용법 익혀서 풀기

ans = max(max(row) for row in a)

Python은 시간 복잡도를 잘 알고 있어야 한다.
관련 내용 : https://wiki.python.org/moin/TimeComplexity

Python에서 큐를 사용할 때는 queue가 아니고 collections.deque를 사용해야 한다.

디버깅 팁
* 1 <= N <= 1,000,000 인 경우 N = 1, 2와 같이 작은 입력, N=1,000,000와 같이 큰 입력을 꼭 넣어본다.
* 컴파일러의 워닝을 무시하지 않는다.
* C++ 런타임 에러의 경우 함수의 리턴값 없는 경우가 있는지 찾아본다.
* Java에서 자료형에 담을 수 없는 정수를 입력받는 경우 런타임 에러가 발생하기도 한다.
* 디버거의 사용도 좋고, 출력을 하면서 원하는 대로 값이 바뀌고 있는지 확인해보는 방법도 좋다.
* N의 크기가 큰 경우 N을 작게 만들어서 디버깅해본다.

choi@startlink.io 최백준